openapi: 3.0.0

servers:
  - description: OSS NB API
    url: 'TODO'
    
info:
  title: TODO
  description: OSS NB API
  version: 1.0.0

tags:
  - name: 'App packages'
    description: Management operations of App descriptors and packages

paths:

#BEGIN APP PACKAGES
  '/oss/v1/app_pkgs':
    get:
      tags:
        - "App packages"
      summary: Query information about multiple App package resources
      description: Query information about multiple App package resources
      operationId: list_app_pkgs
      parameters:
        - name: filter
          in: formData
          description: Filter criteria for the list of App Packages
          schema:
            type: string
            default: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfAppPkgInfo'
              example:
                - _id: "string"
                  id: "string"
                  name: "string"
                  description: "string"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
          
    post:
      tags:
        - "App packages"
      summary: Create a new App Package
      description: Create a new App Package
      operationId: new_app_pkg
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      parameters:
        - name: appd
          in: formData
          description: App file descriptor in a compressed format, preferential .tar.gz
          required: true
          schema:
            type: string
            format: binary
        - name: overwrite
          in: formData
          description: "Overwrite an App Package"
          required: false
          schema:
            type: boolean
            default: null        
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectId'
              example:
                id: "string"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
          

  '/oss/v1/app_pkgs/{app_pkg_id}':
    parameters:
      - name: app_pkg_id
        in: path
        required: true
        description: App Package ID
        schema:
          type: string
    get:
      tags:
        - "App packages"
      summary: Read information about an individual App package resource
      description: Read information about an individual App package resource
      operationId: get_app_pkg
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPkgInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
          
    delete:
      tags:
        - "App packages"
      summary: Delete an individual App package resource
      description: Delete an individual App package resource
      operationId: delete_app_pkg
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
            
#BEGIN NS PACKAGES
 
  '/oss/v1/ns_pkgs':
    get:
      summary: Get a list of NS packages
      operationId: listNsPkgs
      responses:
        '200':
          description: A list of NS packages
    post:
      summary: Create a new NS package
      operationId: createNsPkg
      responses:
        '201':
          description: Created
  
  '/oss/v1/ns_pkgs/{ns_pkg_id}':
    get:
      summary: Get an NS package by ID
      operationId: getNsPkgById
      parameters:
        - name: ns_pkg_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: An NS package
  
  '/oss/v1/appis':
    get:
      summary: Get a list of app instances
      operationId: listAppInstances
      responses:
        '200':
          description: A list of app instances
  
  '/oss/v1/appis/{appi_id}':
    get:
      summary: Get an app instance by ID
      operationId: getAppInstanceById
      parameters:
        - name: appi_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: An app instance
  
  '/oss/v1/nsis':
    get:
      summary: Get a list of NS instances
      operationId: listNsInstances
      responses:
        '200':
          description: A list of NS instances
  
  '/oss/v1/nsis/{nsi_id}':
    get:
      summary: Get an NS instance by ID
      operationId: getNsInstanceById
      parameters:
        - name: nsi_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: An NS instance
          
      
components:

  responses:
    BadRequest:
      description: Bad request. The server cannot process the request due to a client error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
            
    Unauthorized:
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    Forbidden:
      description: Not enough permissions to do this operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    NotFound:
      description: The specified resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    MethodNotAllowed:
      description: This method is not supported for the requested resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    NotAcceptable:
      description: The requested resource content cannot match the Accept headers sent in the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    Conflict:
      description: The operation cannot be executed currently, due to a conflict with the state of the resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    UnprocessableEntity:
      description: The request was well-formed but was unable to be followed due to semantic errors.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    InternalServerError:
      description: Internal server error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    ServiceUnavailable:
      description: Service temporarily unavailable.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    UnexpectedError:
      description: Unexpected error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    
            
  # END RESPONSES
  
  schemas:  
  
    ObjectId:
      type: object
      properties:
        id:
          type: string
          format: uuid

    AppPkgInfo:
      description: |
        App Package Information
        Fields (_id, id, name, description) are described
      type: object
      properties:
        _id:
          description: Identifier of the App package. This identifier is allocated by the NFVO.
          type: string
          format: uuid
        id:
          description: App Package Identifier
          type: string
        name:
          description: App Package Name
          type: string
        description:
          description: App Package description
          type: string
      required:
        - _id
        - id
      
    ArrayOfAppPkgInfo:
      type: array
      items:
        $ref: '#/components/schemas/AppPkgInfo'
        
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string
          format: uri
      additionalProperties: true
      required:
        - status
        - detail
        
  # END SCHEMAS
