openapi: 3.0.0

servers:
  - description: OSS NB API
    url: 'http://127.0.0.1:8080/api/v1'
    
info:
  title: OSS NB API
  description: OSS NB API. 
  version: 1.0.0

tags:
  - name: 'App packages'
    description: Management operations of App descriptors and packages
  - name: 'NS packages'
    description: Management operations of NS descriptors and packages

paths:

#BEGIN APP PACKAGES
  '/oss/v1/app_pkgs':
    get:
      tags:
        - "App packages"
      summary: Query information about multiple App package resources
      description: Query information about multiple App package resources
      operationId: list_app_pkgs
      parameters:
        - name: filter
          in: formData
          description: Filter criteria for the list of App Packages
          schema:
            type: string
            default: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfAppPkgInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
          
    post:
      tags:
        - "App packages"
      summary: Create a new App Package
      description: Create a new App Package
      operationId: new_app_pkg
      requestBody:
        $ref: '#/components/requestBodies/AppPkgCreation'
      parameters:
        - name: appd
          in: formData
          description: App file descriptor in a compressed format, preferential .tar.gz
          required: true
          schema:
            type: string
            format: binary
        - name: overwrite
          in: formData
          description: "Overwrite an App Package"
          required: false
          schema:
            type: boolean
            default: null        
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectId'
              example:
                id: "string"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
          

  '/oss/v1/app_pkgs/{app_pkg_id}':
    parameters:
      - name: app_pkg_id
        in: path
        required: true
        description: App Package ID
        schema:
          type: string
    get:
      tags:
        - "App packages"
      summary: Read information about an individual App package resource
      description: Read information about an individual App package resource
      operationId: get_app_pkg
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPkgInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
          
    delete:
      tags:
        - "App packages"
      summary: Delete an individual App package resource
      description: Delete an individual App package resource
      operationId: delete_app_pkg
      parameters:
        - name: force
          in: formData
          description: "Force the elimination of an App Package"
          required: false
          schema:
            type: boolean
            default: false  
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
            
    patch:
      tags:
        - "App packages"
      summary: Modify an individual App package resource
      description: Modify an individual App package resource
      operationId: update_app_pkg
      requestBody:
        $ref: '#/components/requestBodies/AppPkgUpdate'
      parameters:
        - name: appd
          in: formData
          description: App file descriptor in a compressed format, preferential .tar.gz
          required: true
          schema:
            type: string
            format: binary
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
          
          
#BEGIN NS PACKAGES
 
  '/oss/v1/ns_pkgs':
    get:
      tags:
        - "NS packages"
      summary: Query information about multiple NS packages
      description: Query information about multiple NS packages
      operationId: list_ns_pkgs
      parameters:
        - name: filter
          in: formData
          description: Filter criteria for the list of NS packages
          schema:
            type: string
            default: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfNsdInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
          
    post:
      tags:
        - "NS packages"
      summary: Create a new NS package
      description: Create a new NS package
      operationId: new_ns_pkg
      requestBody:
        $ref: '#/components/requestBodies/CreateNsPackage'
      parameters:
        - name: nsd
          in: formData
          description: Network Service file descriptor in a compressed format, preferential .tar.gz
          required: true
          schema:
            type: string
            format: binary
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectId'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ObjectId'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
  
  '/oss/v1/ns_pkgs/{ns_pkg_id}':
    parameters:
      - name: ns_pkg_id
        in: path
        required: true
        description: NS Package ID
        schema:
          type: string
    get:
      tags:
        - "NS packages"
      summary: Read information about an individual NS package 
      description: Read information about an individual NS package
      operationId: get_ns_pkg
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NsdInfo'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NsdInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
          
    delete:
      tags:
        - "NS packages"
      summary: Delete an individual NS package
      description: Delete an individual NS package 
      operationId: delete_ns_pkg
      parameters:
        - name: force
          in: formData
          description: "Force the elimination of an App Package"
          required: false
          schema:
            type: boolean
            default: false  
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
    
    patch:
      tags:
        - "NS packages"
      summary: Modify the data of an individual NS Package
      description: Modify the data of an individual NS package
      operationId: update_ns_pkg
      requestBody:
        $ref: '#/components/requestBodies/NsPkgUpdate'
      parameters:
        - name: nsd
          in: formData
          description: Network Service file descriptor in a compressed format, preferential .tar.gz
          required: true
          schema:
            type: string
            format: binary
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '5XX':
          $ref: '#/components/responses/UnexpectedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
          
          
# BEGIN APP INSTANCES          

  '/oss/v1/appis':
    get:
      summary: Get a list of app instances
      operationId: listAppInstances
      responses:
        '200':
          description: A list of app instances
  
  '/oss/v1/appis/{appi_id}':
    get:
      summary: Get an app instance by ID
      operationId: getAppInstanceById
      parameters:
        - name: appi_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: An app instance
  
  '/oss/v1/nsis':
    get:
      summary: Get a list of NS instances
      operationId: listNsInstances
      responses:
        '200':
          description: A list of NS instances
  
  '/oss/v1/nsis/{nsi_id}':
    get:
      summary: Get an NS instance by ID
      operationId: getNsInstanceById
      parameters:
        - name: nsi_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: An NS instance
          
      
components:

  responses:
    BadRequest:
      description: Bad request. The server cannot process the request due to a client error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
            
    Unauthorized:
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    Forbidden:
      description: Not enough permissions to do this operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    NotFound:
      description: The specified resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    MethodNotAllowed:
      description: This method is not supported for the requested resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    NotAcceptable:
      description: The requested resource content cannot match the Accept headers sent in the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    Conflict:
      description: The operation cannot be executed currently, due to a conflict with the state of the resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    UnprocessableEntity:
      description: The request was well-formed but was unable to be followed due to semantic errors.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    InternalServerError:
      description: Internal server error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    ServiceUnavailable:
      description: Service temporarily unavailable.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    UnexpectedError:
      description: Unexpected error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    
            
  # END RESPONSES
  
  schemas:  
  
    ObjectId:
      type: object
      properties:
        id:
          type: string
          format: uuid
          
    AppPkgCreation: 
      description: |
        App Package Information
        Fields (appd, overwrite) are described
      type: object
      properties:
        appd:
          description: App file descriptor in a compressed format, preferential .tar.gz
          type: File
        overwrite:
          description: Boolean value, if set true, allows to overwrite existing App Packages. By default this value is NULL
          type: boolean
      required: 
        - appd

    
    AppPkgUpdate:
      description: |
        App Package Information
        Fields (id, appd) are described
        
      type: object
      properties:
        id:
          description: App Package Identifier
          type: string
        appd:
          description: App file descriptor in a compressed format, preferential .tar.gz
          type: File 
      required: 
        - appd

    AppPkgInfo:
      description: |
        App Package Information
        Fields (_id, id, name, description) are described
      type: object
      properties:
        _id:
          description: Identifier of the App package. This identifier is allocated by the NFVO.
          type: string
          format: uuid
        id:
          description: App Package Identifier
          type: string
        name:
          description: App Package Name
          type: string
        description:
          description: App Package description
          type: string
      required:
        - _id
        - id
      
    ArrayOfAppPkgInfo:
      type: array
      items:
        $ref: '#/components/schemas/AppPkgInfo'
        
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string
          format: uri
      additionalProperties: true
      required:
        - status
        - detail
        
    NsdInfo:
      description: |
        NS Package Information
        Fields fields (_id, id, name, description) are described
      type: object
      properties:
        _id:
          description: |
            Identifier of the onboarded individual NS Package
            resource. This identifier is allocated by the NFVO.
          type: string
          format: uuid
        id:
          description: |
            Identifies the NS Package in a globally unique way.
          type: string
        name:
          description: |
            Name of the onboarded NS Package
          type: string
        description:
          description: |
            Description of the onboarded NS Package.
            This information is copied from the NSD content.
          type: string
      required:
        - _id
        - id    
    
    ArrayOfNsdInfo:
      type: array
      items:
        $ref: '#/components/schemas/NsdInfo'
        
    CreateNsPackage:
      description: |
        NS Package Information
        Fields (nsd) are described
        
      type: object
      properties:
        nsd:
          description: Network Service file descriptor in a compressed format, preferential .tar.gz
          type: File 
      required: 
        - nsd
      
    NsPkgUpdate:
      description: |
        NS Package Information
        Fields (id, name, description) are described
      type: object
      properties:
        id:
          description: NS Package Identifier
          type: string
        name:
          description: NS Package Name
          type: string
        description:
          description: NS Package Description
          type: string
        
  # END SCHEMAS
  
  requestBodies:
    AppPkgUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppPkgUpdate'

    AppPkgCreation:
      content:
       application/json:
            schema:
              $ref: '#/components/schemas/AppPkgCreation'
              
    CreateNsPackage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateNsPackage'
            
    NsPkgUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NsPkgUpdate'
              
      
  # END REQUEST BODIES